---
import BaseLayout from "../layouts/BaseLayout.astro";
import { formatDate } from "../lib/formatDate";
import { Link } from "../lib/Link";
import { Paragraph } from "../lib/prose/Paragraph";
import type { PostFrontmatter } from "../types";

let posts = await Astro.glob<PostFrontmatter>("../../posts/**/*.mdx");

if (import.meta.env.PROD) {
  posts = posts.filter((post) => !post.frontmatter.draft);
}

posts.sort((a, b) => {
  return (
    new Date(b.frontmatter.date).getTime() -
    new Date(a.frontmatter.date).getTime()
  );
});
---

<BaseLayout title="hasparus">
  <h1 slot="header-content" class="text-gray-600 dark:text-gray-500">
    hasparus
  </h1>
  <main class="py-10">
    <h1 class="my-6 text-gray-600 dark:text-gray-500">
      Piotr Monwid-Olechnowicz
    </h1>
    <div class="zaduma-prose">
      <Paragraph>
        a subversive software sculptor, tenacious typelevel troubadour; devoted
        to details, complaining either courageously or ceaslessly, depending on
        who you ask.
      </Paragraph>
      <Paragraph>
        I'm working with
        <Link href="https://edgeandnode.com/">Edge & Node</Link>
         on The Graph applications and libraries. After work, I&nbsp;provide
        life support to Theme UI and occasionally contribute to
        <Link href="/contributions">other repositories</Link>.
      </Paragraph>
    </div>
  </main>
  <ul>
    {
      posts.map(({ frontmatter }) => {
        const date = new Date(frontmatter.date);

        return (
          <li>
            <Link
              href={frontmatter.path}
              class="flex flex-row gap-2 justify-between"
              noUnderline
            >
              <h2 class="text-gray-800 dark:text-gray-300 font-sans">
                {frontmatter.title}
              </h2>
              <time
                datetime={date.toISOString()}
                class="text-gray-600 dark:text-gray-400 tabular-nums tracking-tighter shrink-0"
              >
                {formatDate(date)}
              </time>
            </Link>
          </li>
        );
      })
    }
  </ul>
  <style>
    ul:hover li:not(:hover) :where(h2, time) {
      @apply text-gray-600 transition-colors;
      :global(.dark) & {
        @apply text-gray-500;
      }
    }
  </style>
</BaseLayout>
