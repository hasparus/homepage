---
import type { MarkdownInstance } from "astro";

import PostLayout from "../layouts/PostLayout.astro";
import { mdxComponents } from "../lib/mdxComponents";
import type { PostFrontmatter } from "../types";

export const getStaticPaths = async () => {
  let posts = await Astro.glob<PostFrontmatter>("../../posts/**/*.mdx");

  if (import.meta.env.PROD) {
    posts = posts.filter((post) => !post.frontmatter.draft);
  }

  return posts.map((post) => {
    return {
      params: {
        path: post.frontmatter.path.replace(/^\//, ""),
      },
      props: post,
    };
  });
};

interface Props extends Omit<MarkdownInstance<{}>, "frontmatter"> {
  frontmatter: PostFrontmatter;
}
const { Content } = Astro.props;
---

<PostLayout {...Astro.props} headings={Astro.props.getHeadings()}>
  <Content components={mdxComponents} />
</PostLayout>
