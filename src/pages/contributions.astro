---
import {
  filteredRepositories,
  numberOfPRsMergedToPublicRepos,
} from "../../scripts/gh-contributions/out/repositories.json";
import PostLayout from "../layouts/PostLayout.astro";
import { Link } from "../lib/Link";

const fauxFrontmatter = {
  date: new Date().toLocaleDateString("sv-SE"),
  title: "Contributions",
  readingTime: { minutes: 0, text: "", time: 0, words: 0 },
  tags: [],
  path: "",
};

let repositories = filteredRepositories;

if (import.meta.env.PROD) {
  repositories = filteredRepositories.filter(repo => repo.pullRequestsMerged > 1);
}

// TODO: Star icon.
// TODO: Link to PRs made be me, not just to the repo.
---

<PostLayout frontmatter={fauxFrontmatter} headings={[]}>
  <p>
    TODO: Something about the fact that I believe in grassroots improvement of
    public domain.
  </p>
  <dl>
    <dt>PRs Merged</dt>
    <dd>
      {numberOfPRsMergedToPublicRepos}
    </dd>
  </dl>
  <p class="!mb-0">
    Repositories with more than 9 stars that have at least 2 of my PRs merged: 
  </p>
  <ul class="contribs">
    {
      repositories.map((repo) => {
        const href = `https://github.com/${repo.nameWithOwner}`
        const [owner, repoName] = repo.nameWithOwner.split("/");

        return (
          <li>
            <article>
              <Link
                href={href}
                class="flex flex-row gap-2 justify-between items-center"
                noUnderline
              >
                <h2 class="!m-0">
                  <!-- prettier-ignore -->
                  <span class="!font-normal">{owner}/</span><span class="!font-semibold">{repoName}</span>
                </h2>
                <span class="tabular-nums tracking-tighter flex gap-1.5">
                  <span class="bg-gray-400/20 py-1 px-1.5 rounded-md">
                    {repo.pullRequestsMerged}
                    prs
                  </span>
                  <span class="bg-gray-400/20 py-1 px-1.5 rounded-md">
                    ⭐️
                    {repo.stargazerCount}
                  </span>
                </span>
              </Link>
            </article>
          </li>
        );
      })
    }
  </ul>
</PostLayout>

<style>
  dd,
  dt {
    display: inline;
  }
  dt::after {
    content: ":";
  }

  ul.contribs {
    padding-left: 0;
  }
  li {
    list-style: none;
  }
  ul:hover li:not(:hover) * {
    @apply text-gray-600 transition-colors;
    :global(.dark) & {
      @apply text-gray-500;
    }
  }
</style>
